pwd
knitr::opts_chunk$set(echo = TRUE)
#load libraries
library(plyr)
library(tidyverse)
Prescreen <- read.csv("Love Pretest Prescreen Questions.csv")
Prescreen <- Prescreen %>%
filter(Progress == 100) # filter out the first two Qualtrics-specific rows
Prescreen$IPAddress[duplicated(Prescreen$IPAddress)] # Check if duplicate IP Address
Prescreen$Email[duplicated(Prescreen$Email)] # Check if duplicate Email
Prescreen$Age <- as.numeric(as.character(Prescreen$Age))
Prescreen_filtered <- Prescreen %>%
filter(Age >= 18 & Age <= 25) %>% # 1) college aged (18-25)
filter(Gender == "Male") %>% # 2) male
filter(SexualPref == "Heterosexual" | SexualPref == "Bisexual") %>% # 3) heterosexual
filter(Ethnicity == "White/Caucasian/European American") %>% # 4) european american
filter(Born == "Yes") # 5) born in US
# Took out these other more stringent characteristics:
# filter(Mother_Born == "Yes") %>% # 6) mother born in US
# filter(Father_Born == "Yes") %>% # 7) father born in US
# filter(Mother_White == "Yes") %>%  # 8) mother european american
# filter(Father_White == "Yes") %>%  # 9) father european american
# filter(Gparents_Born == 4) # 10) grandparents all born in US
#Take out any potential duplicates in final list
Prescreen_filtered <- Prescreen_filtered %>%
distinct()
#Filter out only participants who haven't yet been invited
AlreadyInvited <- read.csv("Already Invited.csv")
NewWaveInvite <- Prescreen_filtered[!Prescreen_filtered$Email %in% AlreadyInvited$Email, , drop = FALSE] #Extract those in the Prescreen_filtered list that aren't in the Already Invited list.
write.csv(NewWaveInvite, file = "New Wave Invite.csv")
knitr::opts_chunk$set(echo = TRUE)
#load libraries
library(plyr)
library(tidyverse)
Pretest_US <- read.csv("Pretest_US.csv")
Pretest_Japan <- read.csv("Pretest_Japan.csv")
Pretest_US <- Pretest_US %>%
filter(Progress == 100) %>% # filter out the first two Qualtrics-specific rows
mutate(Culture = "European American")
Pretest_Japan <- Pretest_Japan %>%
filter(Progress == 100) %>% # filter out the first two Qualtrics-specific rows
mutate(Culture = "Japanese") %>%
mutate(Gender = factor(Gender,
levels = c(1, 2, 3),
labels = c("Male", "Female", "Other")))
Pretest_US$Email_4 <- gsub(" ", "", Pretest_US$Email_4) #Remove white spaces in Email_4 column
Pretest_US$Email_5 <- gsub(" ", "", Pretest_US$Email_5) #Remove white spaces in Email_5 column
Pretest_Japan$Email_4 <- gsub(" ", "", Pretest_Japan$Email_4) #Remove white spaces in Email_4 column
Pretest_Japan$Email_5 <- gsub(" ", "", Pretest_Japan$Email_5) #Remove white spaces in Email_5 column
# US
Pretest_US$Email_5[Pretest_US$Email_4 == "Abaudrobert5@gmail.com"] <- "Abaudrobert5@gmail.com"
# Japan
Pretest_Japan$Email_5[Pretest_Japan$Email_4 == "ryo.pioneer.9-2-7.97@docomo.ne.jp"] <- "ryo.pioneer.9-2-7.97@docomo.ne.jp"
Pretest_Japan$Email_5[Pretest_Japan$Email_4 == "supercomputerkawamura@gmail.com"] <- "supercomputerkawamura@gmail.com"
Pretest_Japan$Email_5[Pretest_Japan$Email_4 == "norimaru.314103x@gmail.com"] <- "norimaru.314103x@gmail.com"
Pretest_Japan$Email_5[Pretest_Japan$Email_4 == "tourokuyou.shimizu@gmail.com"] <- "tourokuyou.shimizu@gmail.com"
# duplicates: US
Duplicate1 <- Pretest_US$ResponseId[Pretest_US$Email_4 == "camwagn@stanford.edu"][1]
Pretest_US <- Pretest_US[!(Pretest_US$ResponseId == Duplicate1) ,] #Take them out
# Duplicate1 <- Part1_t$pID[Part1_t$email == "106509118@nccu.edu.tw"][1]
# Duplicate2 <- Part1_t$pID[Part1_t$email == "108462007@nccu.edu.tw"][1]
# Part1_t <- Part1_t[!(Part1_t$pID == Duplicate1 | Part1_t$pID == Duplicate2) ,] #Take them out
#***CHECK EVERY ITERATION*** - make sure null
NoMatch_US <- Pretest_US[!Pretest_US$Email_4 %in% Pretest_US$Email_5, , drop = FALSE] # US
NoMatch_US %>%
dplyr::select(Email_4, Email_5)
NoMatch_Japan <- Pretest_Japan[!Pretest_Japan$Email_4 %in% Pretest_Japan$Email_5, , drop = FALSE] # Japan
NoMatch_Japan %>%
dplyr::select(Email_4, Email_5)
#***CHECK EVERY ITERATION*** - make sure null
#Identify duplicate email entries - US
Pretest_US$Email_4[duplicated(Pretest_US$Email_4)] # Email_4
Pretest_US$Email_5[duplicated(Pretest_US$Email_5)] # Email_5
#Identify duplicate email entries - Japan
Pretest_Japan$Email_4[duplicated(Pretest_Japan$Email_4)] # Email_4
Pretest_Japan$Email_5[duplicated(Pretest_Japan$Email_5)] # Email_5
# Take out any potential duplicates in final list
Pretest_US <- Pretest_US %>%
distinct()
Pretest_Japan <- Pretest_Japan %>%
distinct()
# Change the Japanese style numbers to arabic
Pretest_Japan$Age <- as.character(Pretest_Japan$Age)
Pretest_Japan$Age = gsub("歳","", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("０","0", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("１","1", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("２","2", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("３","3", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("４","4", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("５","5", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("６","6", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("７","7", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("８","8", Pretest_Japan$Age)
Pretest_Japan$Age = gsub("９","9", Pretest_Japan$Age)
Pretest_Japan$Age <- as.numeric(Pretest_Japan$Age)
# Count valid cases
Pretest_Japan %>%
filter(Age >= 18 & Age <= 25) %>% # 1) college aged (18-25)
filter(Gender == "Male") %>% # 2) male
filter(SexualPref == 1 | SexualPref == 3) %>% # 3) hetero/bi
filter(Born == 1) # 4) born in Japan
#Filter out only participants who haven't yet been paid
AlreadyPaid_US <- read.csv("AlreadyPaid_US.csv") #UPDATE THIS PART EVERY WAVE
AlreadyPaid_Japan <- read.csv("AlreadyPaid_Japan.csv") #UPDATE THIS PART EVERY WAVE
NewWavePayment_US <- Pretest_US[!Pretest_US$Email_4 %in% AlreadyPaid_US$Email_4, , drop = FALSE] #Extract those in the Pretest_US list that aren't in the AlreadyPaid_US list.
NewWavePayment_Japan <- Pretest_Japan[!Pretest_Japan$Email_4 %in% AlreadyPaid_Japan$Email_4, , drop = FALSE] #Extract those in the Pretest_Japan list that aren't in the AlreadyPaid_Japan list.
FormallyInvited <- read.csv("../Already Invited.csv")
NotInvited <- NewWavePayment_US[!NewWavePayment_US$Email_4 %in% FormallyInvited$Email, ] # Extract those in the New Wave Payment list that aren't in the Formally Invited list.
NotInvited$Email_4
NewWavePayment_US <- NewWavePayment_US %>%
dplyr::select(IPAddress, Email_4, Gender, Age, Culture)
write.csv(NewWavePayment_US, file = "NewWavePayment_US.csv")
NewWavePayment_Japan <- NewWavePayment_Japan %>%
dplyr::select(IPAddress, Email_4, Gender, Age, Culture)
write.csv(NewWavePayment_Japan, file = "NewWavePayment_Japan.csv")
